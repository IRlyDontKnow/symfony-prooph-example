<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'test.private_services_locator' shared service.

return $this->services['test.private_services_locator'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
    'Doctrine\\Common\\Annotations\\Reader' => ['privates', 'annotations.reader', 'getAnnotations_ReaderService.php', true],
    'Psr\\Cache\\CacheItemPoolInterface' => ['services', 'cache.app', 'getCache_AppService', false],
    'Psr\\Container\\ContainerInterface' => ['services', 'service_container', 'getServiceContainerService.php', true],
    'Psr\\Container\\ContainerInterface $parameterBag' => ['privates', 'parameter_bag', 'getParameterBagService', false],
    'Symfony\\Component\\Cache\\Adapter\\AdapterInterface' => ['services', 'cache.app', 'getCache_AppService', false],
    'Symfony\\Component\\DependencyInjection\\ContainerInterface' => ['services', 'service_container', 'getServiceContainerService.php', true],
    'Symfony\\Component\\DependencyInjection\\ParameterBag\\ContainerBagInterface' => ['privates', 'parameter_bag', 'getParameterBagService', false],
    'Symfony\\Component\\DependencyInjection\\ParameterBag\\ParameterBagInterface' => ['privates', 'parameter_bag', 'getParameterBagService', false],
    'Symfony\\Component\\EventDispatcher\\EventDispatcherInterface' => ['services', 'event_dispatcher', 'getEventDispatcherService', false],
    'Symfony\\Component\\Filesystem\\Filesystem' => ['services', 'filesystem', 'getFilesystemService.php', true],
    'Symfony\\Component\\HttpFoundation\\RequestStack' => ['services', 'request_stack', 'getRequestStackService', false],
    'Symfony\\Component\\HttpKernel\\Config\\FileLocator' => ['privates', 'file_locator', 'getFileLocatorService.php', true],
    'Symfony\\Component\\HttpKernel\\Debug\\FileLinkFormatter' => ['privates', 'debug.file_link_formatter', 'getDebug_FileLinkFormatterService', false],
    'Symfony\\Component\\HttpKernel\\HttpKernelInterface' => ['services', 'http_kernel', 'getHttpKernelService', false],
    'Symfony\\Component\\HttpKernel\\KernelInterface' => ['services', 'kernel', 'getKernelService', false],
    'Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface' => ['services', 'router', 'getRouterService', false],
    'Symfony\\Component\\Routing\\Matcher\\UrlMatcherInterface' => ['services', 'router', 'getRouterService', false],
    'Symfony\\Component\\Routing\\RequestContext' => ['privates', 'router.request_context', 'getRouter_RequestContextService', false],
    'Symfony\\Component\\Routing\\RequestContextAwareInterface' => ['services', 'router', 'getRouterService', false],
    'Symfony\\Component\\Routing\\RouterInterface' => ['services', 'router', 'getRouterService', false],
    'Symfony\\Component\\Stopwatch\\Stopwatch' => ['privates', 'debug.stopwatch', 'getDebug_StopwatchService', false],
    'Symfony\\Contracts\\Cache\\CacheInterface' => ['services', 'cache.app', 'getCache_AppService', false],
    'annotation_reader' => ['privates', 'annotations.reader', 'getAnnotations_ReaderService.php', true],
    'annotations.dummy_registry' => ['privates', 'annotations.dummy_registry', 'getAnnotations_DummyRegistryService.php', true],
    'annotations.reader' => ['privates', 'annotations.reader', 'getAnnotations_ReaderService.php', true],
    'argument_metadata_factory' => ['privates', 'argument_metadata_factory', 'getArgumentMetadataFactoryService', false],
    'argument_resolver' => ['privates', 'debug.argument_resolver', 'getDebug_ArgumentResolverService', false],
    'argument_resolver.controller_locator' => ['privates', '.service_locator.9_yeNH1', 'get_ServiceLocator_9YeNH1Service.php', true],
    'argument_resolver.default' => ['privates', 'debug.argument_resolver.default', 'getDebug_ArgumentResolver_DefaultService.php', true],
    'argument_resolver.request' => ['privates', 'debug.argument_resolver.request', 'getDebug_ArgumentResolver_RequestService.php', true],
    'argument_resolver.request_attribute' => ['privates', 'debug.argument_resolver.request_attribute', 'getDebug_ArgumentResolver_RequestAttributeService.php', true],
    'argument_resolver.service' => ['privates', 'debug.argument_resolver.service', 'getDebug_ArgumentResolver_ServiceService.php', true],
    'argument_resolver.session' => ['privates', 'debug.argument_resolver.session', 'getDebug_ArgumentResolver_SessionService.php', true],
    'argument_resolver.variadic' => ['privates', 'debug.argument_resolver.variadic', 'getDebug_ArgumentResolver_VariadicService.php', true],
    'cache.annotations' => ['privates', 'cache.annotations', 'getCache_AnnotationsService', false],
    'cache.annotations.recorder_inner' => ['privates', 'cache.annotations.recorder_inner', 'getCache_Annotations_RecorderInnerService', false],
    'cache.app.recorder_inner' => ['privates', 'cache.app.recorder_inner', 'getCache_App_RecorderInnerService', false],
    'cache.default_clearer' => ['services', 'cache.app_clearer', 'getCache_AppClearerService.php', true],
    'cache.default_marshaller' => ['privates', 'cache.default_marshaller', 'getCache_DefaultMarshallerService', false],
    'cache.serializer' => ['privates', 'cache.serializer', 'getCache_SerializerService', false],
    'cache.serializer.recorder_inner' => ['privates', 'cache.serializer.recorder_inner', 'getCache_Serializer_RecorderInnerService', false],
    'cache.system.recorder_inner' => ['privates', 'cache.system.recorder_inner', 'getCache_System_RecorderInnerService', false],
    'cache.validator' => ['privates', 'cache.validator', 'getCache_ValidatorService', false],
    'cache.validator.recorder_inner' => ['privates', 'cache.validator.recorder_inner', 'getCache_Validator_RecorderInnerService', false],
    'config.resource.self_checking_resource_checker' => ['privates', 'config.resource.self_checking_resource_checker', 'getConfig_Resource_SelfCheckingResourceCheckerService.php', true],
    'config_cache_factory' => ['privates', 'config_cache_factory', 'getConfigCacheFactoryService', false],
    'console.command.about' => ['privates', 'console.command.about', 'getConsole_Command_AboutService.php', true],
    'console.command.assets_install' => ['privates', 'console.command.assets_install', 'getConsole_Command_AssetsInstallService.php', true],
    'console.command.cache_clear' => ['privates', 'console.command.cache_clear', 'getConsole_Command_CacheClearService.php', true],
    'console.command.cache_pool_clear' => ['privates', 'console.command.cache_pool_clear', 'getConsole_Command_CachePoolClearService.php', true],
    'console.command.cache_pool_delete' => ['privates', 'console.command.cache_pool_delete', 'getConsole_Command_CachePoolDeleteService.php', true],
    'console.command.cache_pool_prune' => ['privates', 'console.command.cache_pool_prune', 'getConsole_Command_CachePoolPruneService.php', true],
    'console.command.cache_warmup' => ['privates', 'console.command.cache_warmup', 'getConsole_Command_CacheWarmupService.php', true],
    'console.command.config_debug' => ['privates', 'console.command.config_debug', 'getConsole_Command_ConfigDebugService.php', true],
    'console.command.config_dump_reference' => ['privates', 'console.command.config_dump_reference', 'getConsole_Command_ConfigDumpReferenceService.php', true],
    'console.command.container_debug' => ['privates', 'console.command.container_debug', 'getConsole_Command_ContainerDebugService.php', true],
    'console.command.debug_autowiring' => ['privates', 'console.command.debug_autowiring', 'getConsole_Command_DebugAutowiringService.php', true],
    'console.command.event_dispatcher_debug' => ['privates', 'console.command.event_dispatcher_debug', 'getConsole_Command_EventDispatcherDebugService.php', true],
    'console.command.router_debug' => ['privates', 'console.command.router_debug', 'getConsole_Command_RouterDebugService.php', true],
    'console.command.router_match' => ['privates', 'console.command.router_match', 'getConsole_Command_RouterMatchService.php', true],
    'console.command.yaml_lint' => ['privates', 'console.command.yaml_lint', 'getConsole_Command_YamlLintService.php', true],
    'console.error_listener' => ['privates', 'console.error_listener', 'getConsole_ErrorListenerService.php', true],
    'controller_name_converter' => ['privates', 'controller_name_converter', 'getControllerNameConverterService', false],
    'controller_resolver' => ['privates', 'debug.controller_resolver', 'getDebug_ControllerResolverService', false],
    'data_collector.ajax' => ['privates', 'data_collector.ajax', 'getDataCollector_AjaxService', false],
    'data_collector.cache' => ['privates', 'data_collector.cache', 'getDataCollector_CacheService', false],
    'data_collector.config' => ['privates', 'data_collector.config', 'getDataCollector_ConfigService', false],
    'data_collector.events' => ['privates', 'data_collector.events', 'getDataCollector_EventsService', false],
    'data_collector.exception' => ['privates', 'data_collector.exception', 'getDataCollector_ExceptionService', false],
    'data_collector.logger' => ['privates', 'data_collector.logger', 'getDataCollector_LoggerService', false],
    'data_collector.memory' => ['privates', 'data_collector.memory', 'getDataCollector_MemoryService', false],
    'data_collector.request' => ['privates', 'data_collector.request', 'getDataCollector_RequestService', false],
    'data_collector.router' => ['privates', 'data_collector.router', 'getDataCollector_RouterService', false],
    'data_collector.time' => ['privates', 'data_collector.time', 'getDataCollector_TimeService', false],
    'debug.argument_resolver' => ['privates', 'debug.argument_resolver', 'getDebug_ArgumentResolverService', false],
    'debug.argument_resolver.default' => ['privates', 'debug.argument_resolver.default', 'getDebug_ArgumentResolver_DefaultService.php', true],
    'debug.argument_resolver.default.inner' => ['privates', 'debug.argument_resolver.default.inner', 'getDebug_ArgumentResolver_Default_InnerService.php', true],
    'debug.argument_resolver.inner' => ['privates', 'debug.argument_resolver.inner', 'getDebug_ArgumentResolver_InnerService', false],
    'debug.argument_resolver.request' => ['privates', 'debug.argument_resolver.request', 'getDebug_ArgumentResolver_RequestService.php', true],
    'debug.argument_resolver.request.inner' => ['privates', 'debug.argument_resolver.request.inner', 'getDebug_ArgumentResolver_Request_InnerService.php', true],
    'debug.argument_resolver.request_attribute' => ['privates', 'debug.argument_resolver.request_attribute', 'getDebug_ArgumentResolver_RequestAttributeService.php', true],
    'debug.argument_resolver.request_attribute.inner' => ['privates', 'debug.argument_resolver.request_attribute.inner', 'getDebug_ArgumentResolver_RequestAttribute_InnerService.php', true],
    'debug.argument_resolver.service' => ['privates', 'debug.argument_resolver.service', 'getDebug_ArgumentResolver_ServiceService.php', true],
    'debug.argument_resolver.service.inner' => ['privates', 'debug.argument_resolver.service.inner', 'getDebug_ArgumentResolver_Service_InnerService.php', true],
    'debug.argument_resolver.session' => ['privates', 'debug.argument_resolver.session', 'getDebug_ArgumentResolver_SessionService.php', true],
    'debug.argument_resolver.session.inner' => ['privates', 'debug.argument_resolver.session.inner', 'getDebug_ArgumentResolver_Session_InnerService.php', true],
    'debug.argument_resolver.variadic' => ['privates', 'debug.argument_resolver.variadic', 'getDebug_ArgumentResolver_VariadicService.php', true],
    'debug.argument_resolver.variadic.inner' => ['privates', 'debug.argument_resolver.variadic.inner', 'getDebug_ArgumentResolver_Variadic_InnerService.php', true],
    'debug.controller_resolver' => ['privates', 'debug.controller_resolver', 'getDebug_ControllerResolverService', false],
    'debug.controller_resolver.inner' => ['privates', 'debug.controller_resolver.inner', 'getDebug_ControllerResolver_InnerService', false],
    'debug.debug_handlers_listener' => ['privates', 'debug.debug_handlers_listener', 'getDebug_DebugHandlersListenerService', false],
    'debug.event_dispatcher' => ['services', 'event_dispatcher', 'getEventDispatcherService', false],
    'debug.event_dispatcher.inner' => ['privates', 'debug.event_dispatcher.inner', 'getDebug_EventDispatcher_InnerService', false],
    'debug.file_link_formatter' => ['privates', 'debug.file_link_formatter', 'getDebug_FileLinkFormatterService', false],
    'debug.log_processor' => ['privates', 'debug.log_processor', 'getDebug_LogProcessorService', false],
    'debug.stopwatch' => ['privates', 'debug.stopwatch', 'getDebug_StopwatchService', false],
    'dependency_injection.config.container_parameters_resource_checker' => ['privates', 'dependency_injection.config.container_parameters_resource_checker', 'getDependencyInjection_Config_ContainerParametersResourceCheckerService.php', true],
    'file_locator' => ['privates', 'file_locator', 'getFileLocatorService.php', true],
    'http_exception_listener' => ['privates', 'http_exception_listener', 'getHttpExceptionListenerService.php', true],
    'locale_listener' => ['privates', 'locale_listener', 'getLocaleListenerService', false],
    'monolog.handler.main' => ['privates', 'monolog.handler.main', 'getMonolog_Handler_MainService', false],
    'monolog.handler.null_internal' => ['privates', 'monolog.handler.null_internal', 'getMonolog_Handler_NullInternalService', false],
    'monolog.logger.cache' => ['privates', 'monolog.logger.cache', 'getMonolog_Logger_CacheService', false],
    'monolog.logger.console' => ['privates', 'monolog.logger.console', 'getMonolog_Logger_ConsoleService.php', true],
    'monolog.logger.event' => ['privates', 'monolog.logger.event', 'getMonolog_Logger_EventService', false],
    'monolog.logger.php' => ['privates', 'monolog.logger.php', 'getMonolog_Logger_PhpService', false],
    'monolog.logger.profiler' => ['privates', 'monolog.logger.profiler', 'getMonolog_Logger_ProfilerService', false],
    'monolog.logger.request' => ['privates', 'monolog.logger.request', 'getMonolog_Logger_RequestService', false],
    'monolog.logger.router' => ['privates', 'monolog.logger.router', 'getMonolog_Logger_RouterService', false],
    'monolog.processor.psr_log_message' => ['privates', 'monolog.processor.psr_log_message', 'getMonolog_Processor_PsrLogMessageService', false],
    'parameter_bag' => ['privates', 'parameter_bag', 'getParameterBagService', false],
    'profiler.storage' => ['privates', 'profiler.storage', 'getProfiler_StorageService', false],
    'profiler_listener' => ['privates', 'profiler_listener', 'getProfilerListenerService', false],
    'resolve_controller_name_subscriber' => ['privates', 'resolve_controller_name_subscriber', 'getResolveControllerNameSubscriberService', false],
    'response_listener' => ['privates', 'response_listener', 'getResponseListenerService', false],
    'router.cache_warmer' => ['privates', 'router.cache_warmer', 'getRouter_CacheWarmerService.php', true],
    'router.default' => ['services', 'router', 'getRouterService', false],
    'router.request_context' => ['privates', 'router.request_context', 'getRouter_RequestContextService', false],
    'router_listener' => ['privates', 'router_listener', 'getRouterListenerService', false],
    'routing.loader.annotation' => ['privates', 'routing.loader.annotation', 'getRouting_Loader_AnnotationService.php', true],
    'routing.loader.annotation.directory' => ['privates', 'routing.loader.annotation.directory', 'getRouting_Loader_Annotation_DirectoryService.php', true],
    'routing.loader.annotation.file' => ['privates', 'routing.loader.annotation.file', 'getRouting_Loader_Annotation_FileService.php', true],
    'routing.loader.directory' => ['privates', 'routing.loader.directory', 'getRouting_Loader_DirectoryService.php', true],
    'routing.loader.glob' => ['privates', 'routing.loader.glob', 'getRouting_Loader_GlobService.php', true],
    'routing.loader.php' => ['privates', 'routing.loader.php', 'getRouting_Loader_PhpService.php', true],
    'routing.loader.service' => ['privates', 'routing.loader.service', 'getRouting_Loader_ServiceService.php', true],
    'routing.loader.xml' => ['privates', 'routing.loader.xml', 'getRouting_Loader_XmlService.php', true],
    'routing.loader.yml' => ['privates', 'routing.loader.yml', 'getRouting_Loader_YmlService.php', true],
    'routing.resolver' => ['privates', 'routing.resolver', 'getRouting_ResolverService.php', true],
    'streamed_response_listener' => ['privates', 'streamed_response_listener', 'getStreamedResponseListenerService', false],
    'test.session.listener' => ['privates', 'test.session.listener', 'getTest_Session_ListenerService', false],
    'validate_request_listener' => ['privates', 'validate_request_listener', 'getValidateRequestListenerService', false],
]);
